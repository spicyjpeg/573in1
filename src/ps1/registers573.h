/*
 * ps1-bare-metal - (C) 2023 spicyjpeg
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#pragma once

#include "ps1/registers.h"

/* System 573 base hardware */

typedef enum {
	SYS573_MISC_OUT_ADC_DI      = 1 << 0,
	SYS573_MISC_OUT_ADC_CS      = 1 << 1,
	SYS573_MISC_OUT_ADC_CLK     = 1 << 2,
	SYS573_MISC_OUT_COIN_COUNT1 = 1 << 3,
	SYS573_MISC_OUT_COIN_COUNT2 = 1 << 4,
	SYS573_MISC_OUT_AMP_ENABLE  = 1 << 5,
	SYS573_MISC_OUT_CDDA_ENABLE = 1 << 6,
	SYS573_MISC_OUT_SPU_ENABLE  = 1 << 7,
	SYS573_MISC_OUT_JVS_RESET   = 1 << 8
} Sys573MiscOutputFlag;

typedef enum {
	SYS573_MISC_IN_ADC_DO     = 1 <<  0,
	SYS573_MISC_IN_ADC_SARS   = 1 <<  1,
	SYS573_MISC_IN_CART_SDA   = 1 <<  2,
	SYS573_MISC_IN_JVS_SENSE  = 1 <<  3,
	SYS573_MISC_IN_JVS_IRDY   = 1 <<  4,
	SYS573_MISC_IN_JVS_DRDY   = 1 <<  5,
	SYS573_MISC_IN_CART_IRDY  = 1 <<  6,
	SYS573_MISC_IN_CART_DRDY  = 1 <<  7,
	SYS573_MISC_IN_COIN1      = 1 <<  8,
	SYS573_MISC_IN_COIN2      = 1 <<  9,
	SYS573_MISC_IN_PCMCIA_CD1 = 1 << 10,
	SYS573_MISC_IN_PCMCIA_CD2 = 1 << 11,
	SYS573_MISC_IN_SERVICE    = 1 << 12
} Sys573MiscInputFlag;

typedef enum {
	SYS573_BANK_FLASH   =  0,
	SYS573_BANK_PCMCIA1 = 16,
	SYS573_BANK_PCMCIA2 = 32
} Sys573Bank;

#define SYS573_MISC_OUT     _MMIO16(DEV0_BASE | 0x400000)
#define SYS573_DIP_CART     _MMIO16(DEV0_BASE | 0x400004)
#define SYS573_MISC_IN      _MMIO16(DEV0_BASE | 0x400006)
#define SYS573_JAMMA_MAIN   _MMIO16(DEV0_BASE | 0x400008)
#define SYS573_JVS_RX_DATA  _MMIO16(DEV0_BASE | 0x40000a)
#define SYS573_JAMMA_EXT1   _MMIO16(DEV0_BASE | 0x40000c)
#define SYS573_JAMMA_EXT2   _MMIO16(DEV0_BASE | 0x40000e)
#define SYS573_BANK_CTRL    _MMIO16(DEV0_BASE | 0x500000)
#define SYS573_JVS_IRDY_ACK _MMIO16(DEV0_BASE | 0x520000)
#define SYS573_IDE_RESET    _MMIO16(DEV0_BASE | 0x560000)
#define SYS573_WATCHDOG     _MMIO16(DEV0_BASE | 0x5c0000)
#define SYS573_EXT_OUT      _MMIO16(DEV0_BASE | 0x600000)
#define SYS573_JVS_TX_DATA  _MMIO16(DEV0_BASE | 0x680000)
#define SYS573_CART_OUT     _MMIO16(DEV0_BASE | 0x6a0000)

#define SYS573_FLASH_BASE   _ADDR16(DEV0_BASE | 0x000000)
#define SYS573_IDE_CS0_BASE _ADDR16(DEV0_BASE | 0x480000)
#define SYS573_IDE_CS1_BASE _ADDR16(DEV0_BASE | 0x4c0000)
#define SYS573_RTC_BASE     _ADDR16(DEV0_BASE | 0x620000)
#define SYS573_IO_BASE      _ADDR16(DEV0_BASE | 0x640000)

/* System 573 RTC */

typedef enum {
	SYS573_RTC_CTRL_CAL_BITMASK  = 31 << 0,
	SYS573_RTC_CTRL_CAL_POSITIVE =  0 << 5,
	SYS573_RTC_CTRL_CAL_NEGATIVE =  1 << 5,
	SYS573_RTC_CTRL_READ         =  1 << 6,
	SYS573_RTC_CTRL_WRITE        =  1 << 7
} Sys573RTCControlFlag;

typedef enum {
	SYS573_RTC_SECOND_UNITS_BITMASK = 15 << 0,
	SYS573_RTC_SECOND_TENS_BITMASK  =  7 << 4,
	SYS573_RTC_SECOND_STOP          =  1 << 7
} Sys573RTCSecondFlag;

typedef enum {
	SYS573_RTC_WEEKDAY_UNITS_BITMASK  = 7 << 0,
	SYS573_RTC_WEEKDAY_CENTURY        = 1 << 4,
	SYS573_RTC_WEEKDAY_CENTURY_ENABLE = 1 << 5,
	SYS573_RTC_WEEKDAY_FREQUENCY_TEST = 1 << 6
} Sys573RTCWeekdayFlag;

typedef enum {
	SYS573_RTC_DAY_UNITS_BITMASK   = 15 << 0,
	SYS573_RTC_DAY_TENS_BITMASK    =  3 << 4,
	SYS573_RTC_DAY_LOW_BATTERY     =  1 << 6,
	SYS573_RTC_DAY_BATTERY_MONITOR =  1 << 7
} Sys573RTCDayFlag;

#define SYS573_RTC_CTRL    _MMIO16(DEV0_BASE | 0x623ff0)
#define SYS573_RTC_SECOND  _MMIO16(DEV0_BASE | 0x623ff2)
#define SYS573_RTC_MINUTE  _MMIO16(DEV0_BASE | 0x623ff4)
#define SYS573_RTC_HOUR    _MMIO16(DEV0_BASE | 0x623ff6)
#define SYS573_RTC_WEEKDAY _MMIO16(DEV0_BASE | 0x623ff8)
#define SYS573_RTC_DAY     _MMIO16(DEV0_BASE | 0x623ffa)
#define SYS573_RTC_MONTH   _MMIO16(DEV0_BASE | 0x623ffc)
#define SYS573_RTC_YEAR    _MMIO16(DEV0_BASE | 0x623ffe)

/* System 573 analog I/O board */

#define SYS573A_LIGHTS_A _MMIO16(DEV0_BASE | 0x640080)
#define SYS573A_LIGHTS_B _MMIO16(DEV0_BASE | 0x640088)
#define SYS573A_LIGHTS_C _MMIO16(DEV0_BASE | 0x640090)
#define SYS573A_LIGHTS_D _MMIO16(DEV0_BASE | 0x640098)

/* System 573 digital I/O board */

typedef enum {
	SYS573D_FPGA_MAGIC_KONAMI = 0x1234,
	SYS573D_FPGA_MAGIC_573IN1 = 0x573f
} Sys573DFPGAMagic;

typedef enum {
	SYS573D_FPGA_CONFIG_VERSION_BITMASK       = 255 <<  0,
	SYS573D_FPGA_CONFIG_LOOP_ON_END           =   1 <<  8,
	SYS573D_FPGA_CONFIG_RESET_COUNT_ON_START  =   1 <<  9,
	SYS573D_FPGA_CONFIG_CLEAR_COUNT_L_ON_READ =   1 << 10,
	SYS573D_FPGA_CONFIG_DISABLE_COUNT_ON_IDLE =   1 << 11,
	SYS573D_FPGA_CONFIG_USE_KEY2              =   1 << 12,
	SYS573D_FPGA_CONFIG_USE_KEY3              =   1 << 13,
	SYS573D_FPGA_CONFIG_BYTE_SWAP_OUTPUT      =   1 << 14,
	SYS573D_FPGA_CONFIG_SWAP_KEY1_MSBS        =   1 << 15
} Sys573DFPGAConfigFlag;

typedef enum {
	SYS573D_FPGA_UART_CTRL_ENABLE       = 1 <<  0,
	SYS573D_FPGA_UART_CTRL_BAUD_BITMASK = 7 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_4800    = 0 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_9600    = 1 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_19200   = 2 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_38400   = 3 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_76800   = 4 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_153600  = 5 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_307200  = 6 <<  1,
	SYS573D_FPGA_UART_CTRL_BAUD_614400  = 7 <<  1,
	SYS573D_FPGA_UART_CTRL_TX_FLOW_CTRL = 1 <<  4,
	SYS573D_FPGA_UART_CTRL_RX_FLOW_CTRL = 1 <<  5,
	SYS573D_FPGA_UART_CTRL_RTS          = 1 <<  6,
	SYS573D_FPGA_UART_CTRL_CTS          = 1 <<  7,
	SYS573D_FPGA_UART_CTRL_DTR          = 1 <<  8,
	SYS573D_FPGA_UART_CTRL_DSR          = 1 <<  9,
	SYS573D_FPGA_UART_CTRL_TX_IDLE      = 1 << 10,
	SYS573D_FPGA_UART_CTRL_RX_IDLE      = 1 << 11,
	SYS573D_FPGA_UART_CTRL_TX_FULL      = 1 << 12,
	SYS573D_FPGA_UART_CTRL_RX_FULL      = 1 << 13,
	SYS573D_FPGA_UART_CTRL_RX_STOP_ERR  = 1 << 14
} Sys573DFPGAUARTCtrlFlag;

typedef enum {
	SYS573D_FPGA_MP3_CHIP_STAT_DATA_REQ   = 1 << 12,
	SYS573D_FPGA_MP3_CHIP_STAT_ERROR      = 1 << 13,
	SYS573D_FPGA_MP3_CHIP_STAT_FRAME_SYNC = 1 << 14,
	SYS573D_FPGA_MP3_CHIP_STAT_READY      = 1 << 15
} Sys573DFPGAMP3ChipStatusFlag;

typedef enum {
	SYS573D_FPGA_MP3_CHIP_CTRL_RESET     = 1 << 12,
	SYS573D_FPGA_MP3_CHIP_CTRL_STATUS_CS = 1 << 13
} Sys573DFPGAMP3ChipControlFlag;

typedef enum {
	SYS573D_FPGA_MP3_I2C_SDA = 1 << 12,
	SYS573D_FPGA_MP3_I2C_SCL = 1 << 13
} Sys573DFPGAMP3I2CFlag;

typedef enum {
	SYS573D_FPGA_MP3_FEED_STAT_PLAYING = 1 << 12
} Sys573DFPGAMP3FeedStatusFlag;

typedef enum {
	SYS573D_FPGA_MP3_FEED_CTRL_ENABLE   = 1 << 13,
	SYS573D_FPGA_MP3_FEED_CTRL_PLAY     = 1 << 14,
	SYS573D_FPGA_MP3_FEED_CTRL_COUNT_EN = 1 << 15
} Sys573DFPGAMP3FeedControlFlag;

typedef enum {
	SYS573D_FPGA_DS_BUS_DS2433 = 1 <<  8,
	SYS573D_FPGA_DS_BUS_DS2401 = 1 << 12
} Sys573DFPGADSBusFlag;

typedef enum {
	SYS573D_CPLD_INIT_STAT_INIT = 1 << 12,
	SYS573D_CPLD_INIT_STAT_DONE = 1 << 13,
	SYS573D_CPLD_INIT_STAT_ID1  = 1 << 14,
	SYS573D_CPLD_INIT_STAT_ID2  = 1 << 15
} Sys573DCPLDInitStatusFlag;

typedef enum {
	SYS573D_CPLD_INIT_CTRL_INIT    = 1 << 12,
	SYS573D_CPLD_INIT_CTRL_DONE    = 1 << 13,
	SYS573D_CPLD_INIT_CTRL_PROGRAM = 1 << 14,
	SYS573D_CPLD_INIT_CTRL_UNKNOWN = 1 << 15
} Sys573DCPLDInitControlFlag;

#define SYS573D_FPGA_MAGIC     _MMIO16(DEV0_BASE | 0x640080)
#define SYS573D_FPGA_CONFIG    _MMIO16(DEV0_BASE | 0x640082) // Custom register
#define SYS573D_FPGA_UART_DATA _MMIO16(DEV0_BASE | 0x640084) // Custom register
#define SYS573D_FPGA_UART_CTRL _MMIO16(DEV0_BASE | 0x640086) // Custom register

#define SYS573D_FPGA_NET_ID _MMIO16(DEV0_BASE | 0x640090)

#define SYS573D_FPGA_MP3_PTR_H     _MMIO16(DEV0_BASE | 0x6400a0)
#define SYS573D_FPGA_MP3_PTR_L     _MMIO16(DEV0_BASE | 0x6400a2)
#define SYS573D_FPGA_MP3_END_PTR_H _MMIO16(DEV0_BASE | 0x6400a4)
#define SYS573D_FPGA_MP3_END_PTR_L _MMIO16(DEV0_BASE | 0x6400a6)
#define SYS573D_FPGA_MP3_COUNTER   _MMIO16(DEV0_BASE | 0x6400a8)
#define SYS573D_FPGA_MP3_KEY1      _MMIO16(DEV0_BASE | 0x6400a8)
#define SYS573D_FPGA_MP3_CHIP_STAT _MMIO16(DEV0_BASE | 0x6400aa)
#define SYS573D_FPGA_MP3_CHIP_CTRL _MMIO16(DEV0_BASE | 0x6400aa)
#define SYS573D_FPGA_MP3_I2C       _MMIO16(DEV0_BASE | 0x6400ac)
#define SYS573D_FPGA_MP3_FEED_STAT _MMIO16(DEV0_BASE | 0x6400ae)
#define SYS573D_FPGA_MP3_FEED_CTRL _MMIO16(DEV0_BASE | 0x6400ae)

#define SYS573D_FPGA_DRAM_WR_PTR_H _MMIO16(DEV0_BASE | 0x6400b0)
#define SYS573D_FPGA_DRAM_WR_PTR_L _MMIO16(DEV0_BASE | 0x6400b2)
#define SYS573D_FPGA_DRAM_DATA     _MMIO16(DEV0_BASE | 0x6400b4)
#define SYS573D_FPGA_DRAM_RD_PTR_H _MMIO16(DEV0_BASE | 0x6400b6)
#define SYS573D_FPGA_DRAM_RD_PTR_L _MMIO16(DEV0_BASE | 0x6400b8)
#define SYS573D_FPGA_DRAM_CTRL     _MMIO16(DEV0_BASE | 0x6400ba)
#define SYS573D_FPGA_DRAM_PEEK     _MMIO16(DEV0_BASE | 0x6400bc)

#define SYS573D_FPGA_NET_DATA      _MMIO16(DEV0_BASE | 0x6400c0)
#define SYS573D_FPGA_NET_TX_LENGTH _MMIO16(DEV0_BASE | 0x6400c2)
#define SYS573D_FPGA_NET_RX_LENGTH _MMIO16(DEV0_BASE | 0x6400c4)
#define SYS573D_FPGA_NET_RESET     _MMIO16(DEV0_BASE | 0x6400c8)
#define SYS573D_FPGA_DAC_COUNTER_H _MMIO16(DEV0_BASE | 0x6400ca)
#define SYS573D_FPGA_DAC_COUNTER_L _MMIO16(DEV0_BASE | 0x6400cc)
#define SYS573D_FPGA_DAC_COUNTER_D _MMIO16(DEV0_BASE | 0x6400ce)

#define SYS573D_FPGA_LIGHTS_AH _MMIO16(DEV0_BASE | 0x6400e0)
#define SYS573D_FPGA_LIGHTS_AL _MMIO16(DEV0_BASE | 0x6400e2)
#define SYS573D_FPGA_LIGHTS_BH _MMIO16(DEV0_BASE | 0x6400e4)
#define SYS573D_FPGA_LIGHTS_D  _MMIO16(DEV0_BASE | 0x6400e6)
#define SYS573D_FPGA_RESET     _MMIO16(DEV0_BASE | 0x6400e8)
#define SYS573D_FPGA_MP3_KEY2  _MMIO16(DEV0_BASE | 0x6400ea)
#define SYS573D_FPGA_MP3_KEY3  _MMIO16(DEV0_BASE | 0x6400ec)
#define SYS573D_FPGA_DS_BUS    _MMIO16(DEV0_BASE | 0x6400ee)

#define SYS573D_CPLD_DAC_RESET _MMIO16(DEV0_BASE | 0x6400f4)
#define SYS573D_CPLD_INIT_STAT _MMIO16(DEV0_BASE | 0x6400f6)
#define SYS573D_CPLD_INIT_CTRL _MMIO16(DEV0_BASE | 0x6400f6)
#define SYS573D_CPLD_BITSTREAM _MMIO16(DEV0_BASE | 0x6400f8)
#define SYS573D_CPLD_LIGHTS_CL _MMIO16(DEV0_BASE | 0x6400fa)
#define SYS573D_CPLD_LIGHTS_CH _MMIO16(DEV0_BASE | 0x6400fc)
#define SYS573D_CPLD_LIGHTS_BL _MMIO16(DEV0_BASE | 0x6400fe)
